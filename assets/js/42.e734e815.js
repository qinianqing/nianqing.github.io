(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{843:function(n,e,t){"use strict";t.r(e);var s=t(41),a=Object(s.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h3",{attrs:{id:"电商sku规格"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#电商sku规格"}},[n._v("#")]),n._v(" 电商sku规格")]),n._v(" "),t("p",[n._v("需求描述起来很简单，有这样三个数组：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('let names = ["iPhone X", "iPhone XS"]\n\nlet colors = ["黑色", "白色"]\n\nlet storages = ["64g", "256g"]\n\n')])])]),t("p",[n._v("需要把他们的所有组合穷举出来，最终得到这样一个数组：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('[\n  ["iPhone X", "黑色", "64g"],\n  ["iPhone X", "黑色", "256g"],\n  ["iPhone X", "白色", "64g"],\n  ["iPhone X", "白色", "256g"],\n  ["iPhone XS", "黑色", "64g"],\n  ["iPhone XS", "黑色", "256g"],\n  ["iPhone XS", "白色", "64g"],\n  ["iPhone XS", "白色", "256g"],\n]\n')])])]),t("h3",{attrs:{id:"编码实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编码实现"}},[n._v("#")]),n._v(" 编码实现")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('let names = ["iPhone X", "iPhone XS"]\n\nlet colors = ["黑色", "白色"]\n\nlet storages = ["64g", "256g"]\n\nlet combine = function (...chunks) {\n  let res = []\n\n  let helper = function (chunkIndex, prev) {\n    let chunk = chunks[chunkIndex]\n    let isLast = chunkIndex === chunks.length - 1\n    for (let val of chunk) {\n      let cur = prev.concat(val)\n      if (isLast) {\n        // 如果已经处理到数组的最后一项了 则把拼接的结果放入返回值中\n        res.push(cur)\n      } else {\n        helper(chunkIndex + 1, cur)\n      }\n    }\n  }\n\n  // 从属性数组下标为 0 开始处理\n  // 并且此时的 prev 是个空数组\n  helper(0, [])\n\n  return res\n}\n\nconsole.log(combine(names, colors, storages))\n\n')])])])])}),[],!1,null,null,null);e.default=a.exports}}]);